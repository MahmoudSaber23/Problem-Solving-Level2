#include <iostream>
using namespace std;

enum enPrimeNotPrime { Prime = 1, NotPrime };

enPrimeNotPrime CheckPrime(int Number)
{
    if (Number < 2)
        return enPrimeNotPrime::NotPrime;

    for (int i = 2; i <= Number / 2; i++)
    {
        if (Number % i == 0)
            return enPrimeNotPrime::NotPrime;
    }
    return enPrimeNotPrime::Prime;
}
int RandomNumber(int From, int To)
{
    int randNum = rand() % (To - From + 1) + From;
    return randNum;
}
void FillArrayWithRandomNumbers(int arr[100], int& arrLength)
{
    cout << "Enter number of elements:\n";
    cin >> arrLength;
    for (int i = 0; i < arrLength; i++)
    {
        arr[i] = RandomNumber(1, 100);
    }
}
void PrintArray(int arr[100], int arrLength)
{
    for (int i = 0; i < arrLength; i++)
        cout << arr[i] << " ";

    cout << "\n";
}
void CopyOnlyPrimaryNumbers(int arrSource[100], int arrDestination[100], int arrLength, int& arr2Length)
{
    int Counter = 0;
    for (int i = 0; i < arrLength; i++)
    {
        if (CheckPrime(arrSource[i]) == enPrimeNotPrime::Prime)
        {
            arrDestination[Counter] = arrSource[i];
            Counter++;
        }
    }
    arr2Length = Counter;
}

int main() {
    srand((unsigned)time(NULL));

    int arr[100], arrLength;
    FillArrayWithRandomNumbers(arr, arrLength);

    int arr2[100], arr2Length = 0;
    CopyOnlyPrimaryNumbers(arr, arr2, arrLength, arr2Length);

    cout << "\nArray Elements 1: ";
    PrintArray(arr, arrLength);

    cout << "\nPrime Numbers in Array2 : ";
    PrintArray(arr2, arr2Length);

    return 0;
}

